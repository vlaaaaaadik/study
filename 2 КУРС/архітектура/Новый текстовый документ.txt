КОВаріанти інтерпретації поля адреси з метою знаходження операнда називається способом адресації.
коли команда вказує на операнд він може знаходитись: в самій команд
в основнй памяті
зовнішній 
регістровій памяті
причини різнах способів адресації:
1. забезпечення ефективного використання розрядної сітки команди
2. забезпечення ефективної апаратної підтримки роботи з масивами даних
3. забезпечення задання параметрів операндів
4. можливість генерації великих адрес на основі малих
                                       багаторівнева структура памяті компютера
(див на фото 1)
RAM 4x4
вона буде зберігати 4 слова по 4 біти
кожна память складається з комірок памяті(binary Cell)може бути створена за допомогою магнітних провідників оптики...конденсатора напівпровідника 
див фото 2
дана схема складається з дешифратора, 16 комірок памяті з логічних елементів 4 АБО і управляючих сигналів.
див фото 3
опишемо принцип роботи
Для того щоб записати слово подаємо адресу на дешифратор(адрес інпут)
на шину дата інпут поступає 4 бітний код це слово яке зберігається в памяті
сигнали рід врайт і меморі енейбл поступають з блоку управління
для того щоб зчитати інформацію з памяті потрібно подати код адресу на дешифратор
на одному з виходів дешифратора зявиться сигнал 1
управляючі сигнали меморі енейбл рід врайт поступають з блоку управління
з вибраних комірок наприклад якщо адреса 1 1 то з виходу 3 інформації поступає на логічні елементи 4 або і поступає на вихідну шину дата аунпут
приклад якщо би у нас память була 4х32 то у нас би було комірок 128 а якщо би у нас була память 4 гб то у нас би було 32х
  ієрархія памяті 
procesor registers>100 bytes
l1(cache)>10 kb
l2(cache)>512kb
l3(cache)>mb
main memory > GB
disc storage > tb 
див картинку 4
кеш швидша за основну память
цпу кеш розміщується в цпу
хард драйв також має свої кеш памяті
кеш третього рівня також може бути розміщений в цпу
ідеальна память це швидкодіюча великого обєму і дешева
інформація яка найчастіше використовується розміщена в кеші
                                                                  динамічні ОЗП(DRAM) dynamic random accses memory
основний принцим озу це заряд конденсатора
КМОП транзистор це ключ який підключає конденсатор до лінії запису/зчитування або відключає
див гіф
коли лінія вордлайн активна (1) то транзистор відкривається і збережені біти передаються на лінію бітлайн або виконується запис нової інформації в елемент
Коли конденсатор заряджений то зберігається (1) коли розряжений (0). При читанні дані передаються від конденсатора передаються на бітлайн.
При записуванні дані поступають з бітлайна на конденсатор. Читання знищує дані які зберігались тому після кожного читання їх необхідно відновлювати.
Навіть при не зчитуванні дані необхідно регенерувани зчитувати і перезаписувати через саморозряд конденсатора(кілька мілісекунд) це недолік динамічних ОЗП.
Вони дешеві і займають мало місця.
    статичні ОЗП Static RAM
статичною память називається тому що не має необхідності регенерувати дані.
див схему SRAM
дані зберігаються в бістабільній схемі яка складається з двох перехресно з'єднаних інверторів. Кожен запам'ятований елемент має два виходи бітлайн та небітлайн.
коли вордлайн активна (1) то обидва КМОП транзистори відкриваються і дані можуть бути записані або зчитані з нього.
Перехресно з'єднані інвертори повертають елемент в рівновагу якщо елемент з нього вийде в наслідок випадкових відхилень.
Тригери,СРАМ,ДРАМ являються енергозалежними запам'ятовувальними пристроями але відрізняються часовими характеристиками та площиною кристалу який необхідний для 
збереження 1 біту інформації.
             Синхронний динамічний ОЗП SDRAM
SDRAM з двійною швидкістю обміну коротко називається DDRSDRAM або коротко DDR. Розроблено для збільшення пропускної здатності.
у ДДР передача здійснюється як по передньому так і по задньому фронту тактового імпульсу.
DDR2,DDR3,DDR4 частота була від 100мгЦ до більше 1 ггц
затримка сигналу памяті залежить від розмірів памяті
Більший розмір - повільніше працює більші енергоспоживання.
              ROM Read Only Memory
див схему ROM
це схема точкової нотації
Значення яке зберігається визначає чи є транзистор чи немає
якщо є транзистор і сигнал тоді на лінії записується нуль. коли транзистор відсутній то на лінії зберігається одиниця.
Інформація в комірці записується при виготовленні ROM
                   Програмовані ПЗП (PROM) programming ROM
транзистори розміщені в всіх елементах але в них є можливість керувати з'єднання транзисторів з землею.
              ППЗП З плавкими перемичками fuse programmable ROM
користувач може програмувати ПЗП подавши високу напругу на деякі перемички які перегорять
якщо перемичка присутня то транзистор з'єднаний з землею і зберігає (0)
якщо перемичка знищена то транзистор від'єднаний від землі і елемент зберігає (1)
це одноразово програмована пам'ять.
               Перепрограмовувані ПЗП Erasable PROM
В них реалізований механізм поверненого з'єднання і роз'єднання транзисторів з землею
Використовується МОП транзистор з плаваючим затвором (Floating gate transistor)
Плаваючий затвор не з'єднаний з провідниками. Коли подається висока напруга електрони тунелюють через ізолятор на плаваючий затвор і транзистор відкривається і
з'єднує лінію вибірки слів та лінію бітів.
Коли засвітити ультрафіолатом приблизно 1 годину то електрони вилітають з плаваючого затвору і транзистор закривається.
                 electricaly erasable PROM EEPROM
Використовується попередній метод але замість ультрафіолету використовується електрична схема витирання.

                                                                        СИСТЕМИ ВВЕДЕННЯ/ВИВЕДЕННЯ
Існують 3 механізми реалізації І/О 
1.Програмно керований (І/О з відображенням пам'яті) MMIO
2. Переривання
3. Прямий доступ до пам'яті DMA
Системи використовуються для підключення комп'ютера до зовнішніх пристроїв. Для ПК зовнішні пристрої це монітор мишка клавіатура принтера стереосистема...
   Вбудовані системи це комп'ютери спеціального призначення для керування певним фізичним об'єктом.
Для вбудованих систем це наприклад нагрівальні елементи в котлах, топливні інжектори в автомобілях...
1)див ММІО 
0хFFFF0000-0xFFFFFFFF
принцип роботи заключається в наступному: частина адресного простору памяті відводиться для пристроїв І/О. Ці адреси знаходяться в зарезервованій частині карти пам'яті
Кожному пристрою введення/виведення присвоюється одна або декілька адресс в цьому діапазоні.При збереженні по заданій адресі посилаються дані в пристрій.
При завантаженні дані отримуються від пристрою. 
Запишемо значення 7 в перший пристрій device 1. Операції запису і зчитування нічим не відрізняється від звичайної пересилки або зчитування памяті.
запишемо 7 в Т0
addi $t0, $0,7
sw $t0, 0xFFF4($0)
зчитаємо 
lw $t0, 0xfff4($0)
ПЗ яке взаємодіє з пристроями І/О називається драйвером пристрою
адреси які звязані з пристроями І/О називається регістрами введення виведення
для х86 архітектури периферійні пристрої мають унікальні ідентифікатори.
Дешифратор адресу визначає який пристрій звязується з процесором сигнал MEMWRITE
Мультиплексор readdata виконує вибір між ОП та іншими пристроями І/О
Регістри отримують значення які ввміщують значення які записуються в пристрої І/О
Дані по шині WRITEDATA записуються в регістр який підключений до входу device 1 
Вихідні дані з Device 1 проходять через мультиплексор на шину READDATA і завантажуються в регістр.
В MMIO програма виконує цикл чекання перевіряючи стан пристрою. протягом цього часу процесор не робить корисної роботи
необхідно організувати роботу так щоб пристрій сам повідомляв процесор про свою готовність для обміну даними. Такий сигнал від пристрою назив переривання
Завдяки цьому методу процесор не простоює.Переривання можуть бути апаратні і програмні.
Приклад процесор отримує повідомлення що користувач натиснув кнопку на клавіатурі в цей момент процесор припиняє виконання основної програми, визначає нажату кнопку
(кожне переривання має свій номер) зберігає інформацію про це (контент програми) виконується оброблювач переривань,записується контент перерваної програми після цього продовжується виконання перерваної програми
причини програмних переривань:
1.використання невизначеної команди, 
2.ділення на нуль,
3.читання даних за меж памяті 
4.арифметичне переповнення 
5.апаратні збої
Процесор запам'ятовує причину переривань та значення лічильника команд потім передає оброблювачу перериваннь(exeption handler) це код частини ОС який вияснює причину переривання і реагує відповідним чином.
потім управління повертається попередній пограмі
Для архітектури МІПС він знаходиться за адресою 0х80000180. Коли виникає переривання процесор завжди переходить по цьому адресу незалежно від причини переривання
В МІПС архітектурі для запису причини переривання використовується регістр спеціального призаначення - регістр переривань (cause register)
при виникненні переривань в цей регістр зберігається відповідний код
PROTEUS !!!1!<-------------------------------------------------------------------------------------------------------------------------------------------------------
якщо виникло:
апаратне                      00000000
system call                   00000020
break point ділення на 0      00000024
невизначена команда           00000028
переповнення                  00000030
Оброблювач читає значення регітра причин щоб визначити як оброблювати переривання
в х86 архітектурі використовуються індивідуальні оброблювачі для кожного переривання (таблиці переривань і вектори переривань)             
в МІПС використовується спеціальний регістр EPC (exeption progra counter) використовується для збереження значення лічильника команд перерваної програми
Після виконання оброблювача процесор повертається до виконання програми адрес якої записаний в регістрі EPC
Регістр EPC не являється чатиною регістрового файлу у нас до нього доступу немає
Оброблювач переривань зберігає значення регістрів перерваної програми у стек. Коли обробка переривань закінчиться значення регістрів відновлюється з стеку а адрес виконання відновлюється з ЕРС
Відбувається повернення до перерваної програми.
3)DMA це апаратна технологія. Полягає в тому що спеціальний контроллер ПДП пересилає дані між периферійним пристроєм та ОП без постійної участі процесора при цьому доступ до ОП по черзі отримують то ПДП то процесор кожен для своїх потреб
ПДП використовується для високошвидкісної пересилки Великих блоків даних між ОП і Зовнішнім пристроєм. Операція ПДП виконується схемою що входить до складу периферійного пристрою і називається контроллером ПДП.
Він виконує те ж завдання що і процесор який звертається до оперативної памяті він генерує адресу памяті, сигнали шини,управляє пересилкою даних,автоматично збільшує адресу по якій зберігається наступне слово, відстежує к-сть операцій
ФУНКЦІЇ КОНТРОЛЛЕРА ПДП
