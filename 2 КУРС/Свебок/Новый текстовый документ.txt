процес формуванян вимог
при визначенні і формуванні вимог виникають такі помилки
1. невідповідність специфікації вимогам кінцевих користувачів
2. коректність специфікації взаємодії програми із середовищем функціонування
3. невідповідність вимог замовника окремим властивостям програми
4. некоректність опису функціональних характеристик
процес проектування
помилки при проектуванні можуть бути наслідком недоліків в описі алгоритмів логіки керування структур даних інтерфейсів
логіки моделювання потоків даних форматів вводу виводу
типові помилки
1. непогоджено інтерфейс користувача з середовищем
2. не корректно описані функціїі
3. некорректне завдання даних і їх структур при описі окремих компонентів
4. некоректний опис алгоритмів модулів
5. Визначення умов виникнення можливих помилок у програмі
Процес кодування
на даному етапі виникають помилки які є результатом дефектів проектування, помилки програмістів і менеджерів у процесі
розроблення і налагодження системи
прочиною помилок є
1. безконтрольність значень вхідних параметрів
2. неправильна обробка масивів та їх задання
3. порушення стандартів кодування
4. використання одного імені для позначення різних об'єктів
Процес тестування
на цьому процесі допускаються програмстами і тестувальниками при виконанні технології збирання і тестування,вибору тестових наборів і сценарію тестування
                                                              вимірювання і оцінка складності пограми
1.розмірно орієнтована метрика прямо вимірює програминий продукт через кількість рядків. Одиниці цих рядків називаються локи(LOC)
вхідними даними для проведення розрахунку є такі дані
проект  витрита люд-міс    кількість рядків  вартість   документація   помилки   люди
на основі таблиці обчислюються 4 основні показники
1. продуктивність П=рядки/Людино-місяці
2. Якість Q=рядки/помилки
3. питома вартість ПВ= вартість / ЛОК
4. Документованість=ксть сторінок/ЛОК

                                             ПРАКТИЧНА РОБОТА 5
визначення розмірно-економічних показників програмного продукту
1.визначити вартість програми
2.Порахувати ЛОКИ програми
3.Визначаємо продуктивність задавшись терміном виконання
4. Визначаємо якість
5. Визначаємо питому вартість
6. визначаємо документованість:
переаги і недоліки
переваги:
1. проста і легко обчислюється
недоліки:
1.залежить від мови програмування 
2.вимагає початкових даних які важко отримати на початку
3.не пристосовані до об'єктно - оріентованих мов.

функціонально оріентовані метрики самостійно